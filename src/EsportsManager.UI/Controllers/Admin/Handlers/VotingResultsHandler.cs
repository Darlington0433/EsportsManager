using EsportsManager.BL.DTOs;
using EsportsManager.BL.Interfaces;
using EsportsManager.UI.ConsoleUI.Utilities;

namespace EsportsManager.UI.Controllers.Admin.Handlers;

public class VotingResultsHandler
{
    private readonly IUserService _userService;
    private readonly ITournamentService _tournamentService;

    public VotingResultsHandler(IUserService userService, ITournamentService tournamentService)
    {
        _userService = userService;
        _tournamentService = tournamentService;
    }

    public async Task ViewVotingResultsAsync()
    {
        while (true)
        {
            var options = new[]
            {
                "K·∫øt qu·∫£ voting player",
                "K·∫øt qu·∫£ voting tournament",
                "T√¨m ki·∫øm vote theo user",
                "Th·ªëng k√™ voting",
                "‚¨ÖÔ∏è Quay l·∫°i"
            };

            int selection = InteractiveMenuService.DisplayInteractiveMenu("K·∫æT QU·∫¢ VOTING", options);

            switch (selection)
            {
                case 0:
                    await ShowPlayerVotingResultsAsync();
                    break;
                case 1:
                    await ShowTournamentVotingResultsAsync();
                    break;
                case 2:
                    await SearchVotesByUserAsync();
                    break;
                case 3:
                    await ShowVotingStatsAsync();
                    break;
                case -1:
                case 4:
                    return;
            }
        }
    }

    public async Task ShowPlayerVotingResultsAsync()
    {
        try
        {
            Console.Clear();
            ConsoleRenderingService.DrawBorder("K·∫æT QU·∫¢ VOTING PLAYER", 80, 20);
            
            Console.WriteLine("üèÜ K·∫æT QU·∫¢ VOTING PLAYER:");
            Console.WriteLine("Ch·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn...");

            Console.WriteLine("\nNh·∫•n ph√≠m b·∫•t k·ª≥ ƒë·ªÉ ti·∫øp t·ª•c...");
            Console.ReadKey(true);
        }
        catch (Exception ex)
        {
            ConsoleRenderingService.ShowMessageBox($"L·ªói khi t·∫£i k·∫øt qu·∫£ voting player: {ex.Message}", true, 3000);
        }
    }

    public async Task ShowTournamentVotingResultsAsync()
    {
        try
        {
            Console.Clear();
            ConsoleRenderingService.DrawBorder("K·∫æT QU·∫¢ VOTING TOURNAMENT", 80, 20);
            
            Console.WriteLine("üéñÔ∏è K·∫æT QU·∫¢ VOTING TOURNAMENT:");
            Console.WriteLine("Ch·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn...");

            Console.WriteLine("\nNh·∫•n ph√≠m b·∫•t k·ª≥ ƒë·ªÉ ti·∫øp t·ª•c...");
            Console.ReadKey(true);
        }
        catch (Exception ex)
        {
            ConsoleRenderingService.ShowMessageBox($"L·ªói khi t·∫£i k·∫øt qu·∫£ voting tournament: {ex.Message}", true, 3000);
        }
    }

    public async Task SearchVotesByUserAsync()
    {
        try
        {
            Console.Clear();
            ConsoleRenderingService.DrawBorder("T√åM KI·∫æM VOTE THEO USER", 80, 20);
            
            Console.WriteLine("üîç T√åM KI·∫æM VOTE THEO USER:");
            Console.WriteLine("Ch·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn...");

            Console.WriteLine("\nNh·∫•n ph√≠m b·∫•t k·ª≥ ƒë·ªÉ ti·∫øp t·ª•c...");
            Console.ReadKey(true);
        }
        catch (Exception ex)
        {
            ConsoleRenderingService.ShowMessageBox($"L·ªói khi t√¨m ki·∫øm vote: {ex.Message}", true, 3000);
        }
    }

    public async Task ShowVotingStatsAsync()
    {
        try
        {
            Console.Clear();
            ConsoleRenderingService.DrawBorder("TH·ªêNG K√ä VOTING", 80, 20);
            
            Console.WriteLine("üìä TH·ªêNG K√ä VOTING:");
            Console.WriteLine("Ch·ª©c nƒÉng ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn...");

            Console.WriteLine("\nNh·∫•n ph√≠m b·∫•t k·ª≥ ƒë·ªÉ ti·∫øp t·ª•c...");
            Console.ReadKey(true);
        }
        catch (Exception ex)
        {
            ConsoleRenderingService.ShowMessageBox($"L·ªói khi t·∫£i th·ªëng k√™ voting: {ex.Message}", true, 3000);
        }
    }
}
